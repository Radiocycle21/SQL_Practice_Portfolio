/*
=========================================================================================================================
----------------------------------------------------------------------------------------------------
-- BusinessDB Schema Overview -- 
----------------------------------------------------------------------------------------------------
This schema represents a small business's operational data, including departments, employees,
customers, products, and sales. It is designed to support a wide range of analytical queries,
from tracking sales performance to analyzing customer behavior and employee data.

Schema created by: Prajwal Sai N.

Table Descriptions:
     - department: Contains a list of all company departments.
     - employees: Holds employee information, including their department, salary, and manager.
         It uses a self-referencing foreign key to define a management hierarchy.
     - customers: Stores details about each customer.
     - products: Catalogs the products available for sale with pricing and inventory levels.
     - orders: Records a summary of each customer order.
     - order_details: Provides granular details of each order, linking products to specific orders.
     - sales: Captures each sales transaction, linking to the employee, customer, and product involved.
     - customer_actions: Logs various actions customers take, such as reviews or support requests,
         enabling analysis of customer engagement.

All tables are designed to support the SQL practice challenges and are normalized to prevent
data redundancy. The `IDENTITY(1,1)` syntax is used for auto-incrementing primary keys for MS SQL Server compatibility.
=========================================================================================================================
*/


-- Step 1: Create the new database
CREATE DATABASE BusinessDB;
GO

-- Step 2: Set the newly created database as the active context
USE BusinessDB;
GO

-- Step 3: create the Tables in the Schema

-- Create Department Table
CREATE TABLE department (
    dept_id INT PRIMARY KEY,
    dept_name NVARCHAR(255)
);

-- Create Employees Table
CREATE TABLE employees (
    emp_id INT IDENTITY(1,1) PRIMARY KEY,
    first_name NVARCHAR(255),
    last_name NVARCHAR(255),
    dept_id INT,
    salary DECIMAL(10, 2),
    hire_date DATE,
    manager_id INT,
    -- Named foreign key for self-join
    CONSTRAINT FK_Employee_Manager FOREIGN KEY (manager_id) REFERENCES employees(emp_id),
    -- Named foreign key for department
    CONSTRAINT FK_Employee_Department FOREIGN KEY (dept_id) REFERENCES department(dept_id)
);

-- Create Customers Table
CREATE TABLE customers (
    customer_id INT PRIMARY KEY,
    first_name NVARCHAR(255),
    last_name NVARCHAR(255),
    email NVARCHAR(255)
);

-- Create Products Table
CREATE TABLE products (
    product_id INT PRIMARY KEY,
    product_name NVARCHAR(255),
    category NVARCHAR(255),
    price DECIMAL(10, 2),
    stock_quantity INT
);

-- Create Orders Table
CREATE TABLE orders (
    order_id INT PRIMARY KEY,
    customer_id INT,
    order_date DATETIME2,
    total_amount DECIMAL(10, 2),
    CONSTRAINT FK_Order_Customer FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

-- Create Order Details Table
CREATE TABLE order_details (
    order_detail_id INT IDENTITY(1,1) PRIMARY KEY,
    order_id INT,
    product_id INT,
    quantity INT,
    subtotal DECIMAL(10, 2),
    CONSTRAINT FK_OrderDetail_Order FOREIGN KEY (order_id) REFERENCES orders(order_id),
    CONSTRAINT FK_OrderDetail_Product FOREIGN KEY (product_id) REFERENCES products(product_id)
);

-- Create Sales Table
CREATE TABLE sales (
    sale_id INT IDENTITY(1,1) PRIMARY KEY,
    order_id INT,
    product_id INT,
    customer_id INT,
    sale_date DATETIME2,
    quantity INT,
    revenue DECIMAL(10, 2),
    employee_id INT,
    CONSTRAINT FK_Sales_Order FOREIGN KEY (order_id) REFERENCES orders(order_id),
    CONSTRAINT FK_Sales_Product FOREIGN KEY (product_id) REFERENCES products(product_id),
    CONSTRAINT FK_Sales_Customer FOREIGN KEY (customer_id) REFERENCES customers(customer_id),
    CONSTRAINT FK_Sales_Employee FOREIGN KEY (employee_id) REFERENCES employees(emp_id)
);

-- Create Customer Actions Table
CREATE TABLE customer_actions (
    action_id INT IDENTITY(1,1) PRIMARY KEY,
    customer_id INT,
    action_type NVARCHAR(255),
    action_date DATETIME2,
    CONSTRAINT FK_Action_Customer FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);




